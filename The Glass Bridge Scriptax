-- Attempt to load Rayfield library from sirius.menu
local success, Rayfield = pcall(function()
    return loadstring(game:HttpGet('https://sirius.menu/rayfield'))()
end)

-- Check if Rayfield loaded successfully
if not success or not Rayfield then
    warn("Failed to load Rayfield from https://sirius.menu/rayfield. Running script without UI.")
    -- Fallback script without UI
    for _, step in pairs(workspace:GetChildren()) do
        if step.Name == "Step" and step:IsA("Model") then
            local glassTempered = step:FindFirstChild("glass_tempered")
            if glassTempered then
                for _, part in pairs(glassTempered:GetDescendants()) do
                    if part:IsA("BasePart") or part:IsA("MeshPart") then
                        part.Color = Color3.fromRGB(0, 255, 0) -- Neon green
                        part.Material = Enum.Material.Neon
                    end
                end
            end
        end
    end
    print("Coloring completed: glass_tempered (neon green).")
else
    -- Show decorative notification on script start
    Rayfield:Notify({
        Title = "Scriptax HUB",
        Content = "Welcome to Scriptax HUB! Glass Color Menu loaded successfully.",
        Duration = 4,
        Image = "rbxassetid://4483345998"
    })

    -- Services
    local Players = game:GetService("Players")
    local LocalPlayer = Players.LocalPlayer
    local UserInputService = game:GetService("UserInputService")
    local RunService = game:GetService("RunService")

    -- Function to create the window
    local function createWindow()
        local Window = Rayfield:CreateWindow({
            Name = "Glass Color Menu | Scriptax",
            LoadingTitle = "Loading...",
            LoadingSubtitle = "by Estardax",
            ShowText = "Open Menu",
            Theme = "Serenity",
            ToggleUIKeybind = "G",
            KeySystem = false,
            ConfigurationSaving = { 
                Enabled = true, 
                FolderName = "ScriptaxConfig", 
                FileName = "GlassColorConfig" 
            }
        })

        -- ================== SHARED VARS ==================
        local glassEspEnabled = false
        local correctAllEnabled = false
        local originalTempered = {} -- [part] = {Color=..., Material=...}
        local originalWeak = {} -- [part] = {Color=..., Material=...}
        local hiddenDetectors = {} -- Store hidden detectors props to restore later
        local GlassEspToggle = nil -- Reference to Glass ESP toggle
        local CorrectAllToggle = nil -- Reference to Correct All toggle
        local floatingEspButton = nil -- Reference to the ESP floating button UI
        local floatingCorrectButton = nil -- Reference to the Correct All floating button UI
        local floatingEspButtonToggle = nil -- Reference to the ESP mobile toggle
        local floatingCorrectButtonToggle = nil -- Reference to the Correct All mobile toggle
        local espStroke = nil -- Reference to the ESP UIStroke for borders
        local correctStroke = nil -- Reference to the Correct All UIStroke for borders
        
        -- ChildAdded connection for dynamic steps
        local childAddedConnection = workspace.ChildAdded:Connect(function(child)
            if child.Name == "Step" and child:IsA("Model") then
                if glassEspEnabled then
                    applyToStepEsp(child)
                end
                if correctAllEnabled then
                    applyToStepCorrect(child)
                end
            end
        end)

        -- Apply ESP to a single step
        local function applyToStepEsp(step)
            local glassTempered = step:FindFirstChild("glass_tempered")
            if glassTempered then
                for _, part in pairs(glassTempered:GetDescendants()) do
                    if part:IsA("BasePart") or part:IsA("MeshPart") then
                        if not originalTempered[part] then
                            originalTempered[part] = { Color = part.Color, Material = part.Material }
                        end
                        part.Color = Color3.fromRGB(0, 255, 0) -- Neon green
                        part.Material = Enum.Material.Neon
                    end
                end
            end
        end

        -- Apply Correct All to a single step
        local function applyToStepCorrect(step)
            local glassWeak = step:FindFirstChild("glass_weak")
            if glassWeak then
                -- Color weak glass parts blue neon
                for _, part in pairs(glassWeak:GetDescendants()) do
                    if part:IsA("BasePart") or part:IsA("MeshPart") then
                        if not originalWeak[part] then
                            originalWeak[part] = { Color = part.Color, Material = part.Material }
                        end
                        part.Color = Color3.fromRGB(0, 0, 255) -- Blue
                        part.Material = Enum.Material.Neon -- Make it neon
                    end
                end
                
                -- Hide detector by making it transparent and non-collidable
                local detector = glassWeak:FindFirstChild("Detector")
                if detector and detector:IsA("BasePart") and not hiddenDetectors[glassWeak] then
                    hiddenDetectors[glassWeak] = { Transparency = detector.Transparency, CanCollide = detector.CanCollide }
                    detector.Transparency = 1
                    detector.CanCollide = false
                end
            end
        end

        -- Apply ESP to all current steps
        local function applyGlassEsp()
            for _, step in pairs(workspace:GetChildren()) do
                if step.Name == "Step" and step:IsA("Model") then
                    applyToStepEsp(step)
                end
            end
        end

        -- Apply Correct All to all current steps
        local function applyCorrectAll()
            for _, step in pairs(workspace:GetChildren()) do
                if step.Name == "Step" and step:IsA("Model") then
                    applyToStepCorrect(step)
                end
            end
        end

        -- Reset ESP
        local function resetGlassEsp()
            for part, props in pairs(originalTempered) do
                if part and part:IsDescendantOf(workspace) then
                    part.Color = props.Color
                    part.Material = props.Material
                end
            end
            originalTempered = {} -- Clear after reset
        end

        -- Reset Correct All
        local function resetCorrectAll()
            -- Restore detectors
            for glassWeak, props in pairs(hiddenDetectors) do
                if glassWeak and glassWeak:IsDescendantOf(workspace) then
                    local detector = glassWeak:FindFirstChild("Detector")
                    if detector then
                        detector.Transparency = props.Transparency
                        detector.CanCollide = props.CanCollide
                    end
                end
            end
            hiddenDetectors = {} -- Clear the table
            
            -- Reset colors
            for part, props in pairs(originalWeak) do
                if part and part:IsDescendantOf(workspace) then
                    part.Color = props.Color
                    part.Material = props.Material
                end
            end
            originalWeak = {} -- Clear after reset
        end

        -- Toggle ESP
        function toggleGlassEsp()
            glassEspEnabled = not glassEspEnabled
            if GlassEspToggle then GlassEspToggle:Set(glassEspEnabled) end
            if glassEspEnabled then
                applyGlassEsp()
                if espStroke then
                    espStroke.Color = Color3.fromRGB(0, 255, 0) -- Green borders
                end
                Rayfield:Notify({
                    Title = "Success",
                    Content = "glass_tempered (neon green) enabled.",
                    Duration = 3,
                    Image = "rbxassetid://4483345998"
                })
            else
                resetGlassEsp()
                if espStroke then
                    espStroke.Color = Color3.fromRGB(0, 0, 0) -- Black borders
                end
                Rayfield:Notify({
                    Title = "Reset",
                    Content = "glass_tempered reset to original colors.",
                    Duration = 3,
                    Image = "rbxassetid://4483345998"
                })
            end
        end

        -- Toggle Correct All
        function toggleCorrectAll()
            correctAllEnabled = not correctAllEnabled
            if CorrectAllToggle then CorrectAllToggle:Set(correctAllEnabled) end
            if correctAllEnabled then
                applyCorrectAll()
                if correctStroke then
                    correctStroke.Color = Color3.fromRGB(0, 255, 0) -- Green borders (changed from blue)
                end
                Rayfield:Notify({
                    Title = "Success",
                    Content = "glass_weak (blue neon) enabled and detectors hidden.",
                    Duration = 3,
                    Image = "rbxassetid://4483345998"
                })
            else
                resetCorrectAll()
                if correctStroke then
                    correctStroke.Color = Color3.fromRGB(0, 0, 0) -- Black borders
                end
                Rayfield:Notify({
                    Title = "Reset",
                    Content = "glass_weak reset and detectors restored.",
                    Duration = 3,
                    Image = "rbxassetid://4483345998"
                })
            end
        end

        -- Function to create the ESP floating draggable button
        local function createFloatingEspButton()
            if floatingEspButton then return end

            local screenGui = Instance.new("ScreenGui")
            screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
            screenGui.IgnoreGuiInset = true
            screenGui.ResetOnSpawn = false -- Prevent reset on death

            floatingEspButton = Instance.new("Frame")
            floatingEspButton.Size = UDim2.new(0, 50, 0, 50) -- Made smaller
            floatingEspButton.Position = UDim2.new(0.4, 0, 0.5, 0)
            floatingEspButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White background
            floatingEspButton.BorderSizePixel = 0
            floatingEspButton.Parent = screenGui

            local uiCorner = Instance.new("UICorner")
            uiCorner.CornerRadius = UDim.new(1, 0) -- Fully circular
            uiCorner.Parent = floatingEspButton

            espStroke = Instance.new("UIStroke")
            espStroke.Thickness = 2
            espStroke.Color = glassEspEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0) -- Sync with ESP state
            espStroke.Parent = floatingEspButton

            local textLabel = Instance.new("TextLabel")
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Text = "ESP"
            textLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black text
            textLabel.TextSize = 14
            textLabel.Font = Enum.Font.SourceSansBold
            textLabel.Parent = floatingEspButton

            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 1, 0)
            button.BackgroundTransparency = 1
            button.Text = ""
            button.Parent = floatingEspButton
            button.MouseButton1Click:Connect(toggleGlassEsp)

            -- Make it draggable
            local dragging = false
            local dragInput, dragStart, startPos

            local function update(input)
                local delta = input.Position - dragStart
                floatingEspButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end

            button.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = floatingEspButton.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            button.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)
        end

        -- Function to create the Correct All floating draggable button
        local function createFloatingCorrectButton()
            if floatingCorrectButton then return end

            local screenGui = Instance.new("ScreenGui")
            screenGui.Parent = LocalPlayer:WaitForChild("PlayerGui")
            screenGui.IgnoreGuiInset = true
            screenGui.ResetOnSpawn = false -- Prevent reset on death

            floatingCorrectButton = Instance.new("Frame")
            floatingCorrectButton.Size = UDim2.new(0, 50, 0, 50) -- Made smaller and same size as ESP
            floatingCorrectButton.Position = UDim2.new(0.6, 0, 0.5, 0)
            floatingCorrectButton.BackgroundColor3 = Color3.fromRGB(255, 255, 255) -- White background
            floatingCorrectButton.BorderSizePixel = 0
            floatingCorrectButton.Parent = screenGui

            local uiCorner = Instance.new("UICorner")
            uiCorner.CornerRadius = UDim.new(1, 0) -- Fully circular
            uiCorner.Parent = floatingCorrectButton

            correctStroke = Instance.new("UIStroke")
            correctStroke.Thickness = 2
            correctStroke.Color = correctAllEnabled and Color3.fromRGB(0, 255, 0) or Color3.fromRGB(0, 0, 0) -- Green borders like ESP
            correctStroke.Parent = floatingCorrectButton

            local textLabel = Instance.new("TextLabel")
            textLabel.Size = UDim2.new(1, 0, 1, 0)
            textLabel.BackgroundTransparency = 1
            textLabel.Text = "ALL"
            textLabel.TextColor3 = Color3.fromRGB(0, 0, 0) -- Black text
            textLabel.TextSize = 14 -- Same size as ESP
            textLabel.Font = Enum.Font.SourceSansBold -- Same font as ESP
            textLabel.Parent = floatingCorrectButton

            local button = Instance.new("TextButton")
            button.Size = UDim2.new(1, 0, 1, 0)
            button.BackgroundTransparency = 1
            button.Text = ""
            button.Parent = floatingCorrectButton
            button.MouseButton1Click:Connect(toggleCorrectAll)

            -- Make it draggable (same as ESP)
            local dragging = false
            local dragInput, dragStart, startPos

            local function update(input)
                local delta = input.Position - dragStart
                floatingCorrectButton.Position = UDim2.new(startPos.X.Scale, startPos.X.Offset + delta.X, startPos.Y.Scale, startPos.Y.Offset + delta.Y)
            end

            button.InputBegan:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseButton1 or input.UserInputType == Enum.UserInputType.Touch then
                    dragging = true
                    dragStart = input.Position
                    startPos = floatingCorrectButton.Position
                    input.Changed:Connect(function()
                        if input.UserInputState == Enum.UserInputState.End then
                            dragging = false
                        end
                    end)
                end
            end)

            button.InputChanged:Connect(function(input)
                if input.UserInputType == Enum.UserInputType.MouseMovement or input.UserInputType == Enum.UserInputType.Touch then
                    dragInput = input
                end
            end)

            UserInputService.InputChanged:Connect(function(input)
                if input == dragInput and dragging then
                    update(input)
                end
            end)
        end

        -- Function to destroy the floating ESP button
        local function destroyFloatingEspButton()
            if floatingEspButton then
                floatingEspButton.Parent:Destroy()
                floatingEspButton = nil
                espStroke = nil
            end
        end

        -- Function to destroy the floating Correct All button
        local function destroyFloatingCorrectButton()
            if floatingCorrectButton then
                floatingCorrectButton.Parent:Destroy()
                floatingCorrectButton = nil
                correctStroke = nil
            end
        end

        -- Recreate floating buttons on character respawn
        LocalPlayer.CharacterAdded:Connect(function()
            -- Wait a bit for the game to stabilize
            task.wait(2)
            
            -- Recreate buttons if they were enabled
            if floatingEspButtonToggle and floatingEspButtonToggle.CurrentValue then
                createFloatingEspButton()
            end
            if floatingCorrectButtonToggle and floatingCorrectButtonToggle.CurrentValue then
                createFloatingCorrectButton()
            end
            
            -- Reapply if needed (ChildAdded handles new, but reapply to existing if any changes)
            if glassEspEnabled then
                applyGlassEsp()
            end
            if correctAllEnabled then
                applyCorrectAll()
            end
        end)

        -- =================== TAB: MAIN ===================
        local TabMain = Window:CreateTab("Main", "layers")
        TabMain:CreateSection("Glass Coloring")
        GlassEspToggle = TabMain:CreateToggle({
            Name = "Glass ESP",
            CurrentValue = false,
            Flag = "Glass_ESP",
            Callback = function(v)
                glassEspEnabled = v
                if v then
                    applyGlassEsp()
                    if espStroke then
                        espStroke.Color = Color3.fromRGB(0, 255, 0)
                    end
                    Rayfield:Notify({
                        Title = "Success",
                        Content = "glass_tempered (neon green) enabled.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                else
                    resetGlassEsp()
                    if espStroke then
                        espStroke.Color = Color3.fromRGB(0, 0, 0)
                    end
                    Rayfield:Notify({
                        Title = "Reset",
                        Content = "glass_tempered reset to original colors.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                end
            end,
        })

        TabMain:CreateSection("Correct All")
        CorrectAllToggle = TabMain:CreateToggle({
            Name = "Correct All Glass",
            CurrentValue = false,
            Flag = "Correct_All",
            Callback = function(v)
                correctAllEnabled = v
                if v then
                    applyCorrectAll()
                    if correctStroke then
                        correctStroke.Color = Color3.fromRGB(0, 255, 0)
                    end
                    Rayfield:Notify({
                        Title = "Success",
                        Content = "glass_weak (blue neon) enabled and detectors hidden.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                else
                    resetCorrectAll()
                    if correctStroke then
                        correctStroke.Color = Color3.fromRGB(0, 0, 0)
                    end
                    Rayfield:Notify({
                        Title = "Reset",
                        Content = "glass_weak reset and detectors restored.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                end
            end
        })

        TabMain:CreateSection("Configuration")
        TabMain:CreateLabel("Settings save manually in-game.")

        -- ================= TAB: MOBILE =================
        local TabMobile = Window:CreateTab("Mobile", "smartphone")
        TabMobile:CreateSection("Floating Buttons")
        floatingEspButtonToggle = TabMobile:CreateToggle({
            Name = "ESP Button",
            CurrentValue = false,
            Flag = "Floating_ESP_Button",
            Callback = function(v)
                if v then
                    createFloatingEspButton()
                    Rayfield:Notify({
                        Title = "Success",
                        Content = "ESP floating button enabled.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                else
                    destroyFloatingEspButton()
                    Rayfield:Notify({
                        Title = "Success",
                        Content = "ESP floating button disabled.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                end
            end,
        })

        floatingCorrectButtonToggle = TabMobile:CreateToggle({
            Name = "Correct All Button",
            CurrentValue = false,
            Flag = "Floating_Correct_Button",
            Callback = function(v)
                if v then
                    createFloatingCorrectButton()
                    Rayfield:Notify({
                        Title = "Success",
                        Content = "Correct All floating button enabled.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                else
                    destroyFloatingCorrectButton()
                    Rayfield:Notify({
                        Title = "Success",
                        Content = "Correct All floating button disabled.",
                        Duration = 3,
                        Image = "rbxassetid://4483345998"
                    })
                end
            end,
        })

        -- ================= TAB: KEYBINDS =================
        local TabKeys = Window:CreateTab("Keybinds", "keyboard")
        TabKeys:CreateSection("Custom Keybinds")
        TabKeys:CreateKeybind({
            Name = "Toggle Glass ESP",
            CurrentKeybind = "E",
            HoldToInteract = false,
            Flag = "Keybind_GlassESP",
            Callback = toggleGlassEsp
        })
        TabKeys:CreateKeybind({
            Name = "Toggle Correct All",
            CurrentKeybind = "R",
            HoldToInteract = false,
            Flag = "Keybind_CorrectAll",
            Callback = toggleCorrectAll
        })
        TabKeys:CreateLabel("Press G to open/close the menu")
        TabKeys:CreateLabel("Default: E for Glass ESP, R for Correct All")

        -- ================== CREDITS ==================
        local TabCredits = Window:CreateTab("Credits", "award")
        TabCredits:CreateSection("Script Information")
        TabCredits:CreateLabel("Glass Color Menu | Made by Estardax ⚡")
        TabCredits:CreateLabel("UI powered by Rayfield Library")
        TabCredits:CreateLabel("Scriptax HUB - Advanced Glass Bridge Tools")

        return Window
    end

    -- Initial creation
    createWindow()
end
